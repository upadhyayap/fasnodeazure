name: Build and deploy to azure functions
on:
  push:
    branches:
    - master

env:
  AZURE_WEBAPP_NAME: fasnodestarter
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'Application'
  NODE_VERSION: '8.11.1'
  RESOURCEGROUPNAME: 'fasnodestarterrg'
  LOCATION: 'centralus'
  FUNCTIONAPPNAME: 'fasnodestarter'
  STORAGEACCOUNTNAME: 'fasnodestartersg'
  HOSTINGPLANNAME: 'ConsumptionPlan'
  APPINSIGHTLOCATION: 'centralus'

jobs:
  build-and-test:
    name: Build and Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install Application dependencies
      run: |
        cd Application
        npm install
        npm run build --if-present
    - name: Install Test dependencies and run tests
      continue-on-error: false
      run: |
        cd Tests
        npm install
        npm test
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: build-artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ github.workspace }}
  deploy:
    name: Deploy Artifacts
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2
      with:
        # Artifact name
        name: build-artifact
        # Destination path
        path: ${{ github.workspace }}
    # login to azure
    - name: Login to Azure
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    # Deploy Arm template
    - name: Deploy ARM Template
      uses: azure/CLI@v1
      continue-on-error: false
      with:
        inlineScript: |
          az group create --name ${{ env.RESOURCEGROUPNAME }} --location ${{ env.LOCATION }}
          az deployment group create --resource-group ${{ env.RESOURCEGROUPNAME }} --template-file ./ArmTemplates/windows-functionapp-template.json --parameters functionAppName='${{ env.FUNCTIONAPPNAME }}' storageAccountName='${{ env.STORAGEACCOUNTNAME }}' hostingPlanName='${{ env.HOSTINGPLANNAME }}' appInsightLocation='${{ env.APPINSIGHTLOCATION }}' 
    # Deploy function app
    - name: Azure Functions Action
      uses: Azure/functions-action@v1
      continue-on-error: false
      with:
        # Name of the Azure Function App
        app-name: ${{ env.FUNCTIONAPPNAME }}
        # Path to package or folder. *.zip or a folder to deploy
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}