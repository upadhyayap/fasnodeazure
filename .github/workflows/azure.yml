name: Build and deploy to azure functions
on:
  push:
    branches:
    - master
    - releases

env:
  AZURE_WEBAPP_NAME: fasnodestarter    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: 'Application'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '8.11.1'                # set this to the node version to use

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install Application dependencies
      run: |
        cd Application
        npm install
        npm run build --if-present
    - name: Install Test dependencies and run tests
      continue-on-error: false
      run: |
        cd Tests
        npm install
        npm test
    # login to azure
    - name: Login to Azure
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    # Deploy Arm template
    - name: Deploy ARM Template
      uses: azure/CLI@v1
      continue-on-error: false
      with:
        inlineScript: |
          az deployment group create --resource-group fasnodestarterrg --template-file ./ArmTemplates/windows-functionapp-template.json --parameters functionAppName='fasnodestarter' storageAccountName='fasnodestartersg' hostingPlanName='ConsumptionPlan' appInsightLocation='centralUs' 
    # Deploy function app
    - name: Azure Functions Action
      uses: Azure/functions-action@v1
      id: fasnodejs
      continue-on-error: false
      with:
        # Name of the Azure Function App
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        # Path to package or folder. *.zip or a folder to deploy
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        # Function app slot to be deploy to
        #slot-name: 'optonal'
        # Publish profile (*.publishsettings) file contents with web deploy secrets
        #publish-profile: ${{secrets.SCM_CREDENTIALS}}
