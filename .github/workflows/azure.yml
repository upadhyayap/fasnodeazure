# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 2. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
name: Build and deploy to azure functions
on:
  push:
    branches:
    - master
    - releases

env:
  AZURE_WEBAPP_NAME: fasnodestarter    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: 'Application'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '8.11.1'                # set this to the node version to use

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install Application dependencies
      run: |
        cd Application
        npm install
        npm run build --if-present
    - name: Install Test dependencies and run tests
      run: |
        cd Tests
        npm install
        npm test
    # login to azure
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    # Deploy Arm template
    - name: Deploy ARM Template
      uses: azure/CLI@v1
      continue-on-error: false
      with:
        inlineScript: |
          az deployment group create --resource-group fasnodestarterrg --template-file ./ArmTemplates/windows-functionapp-template.json      
    # Deploy function app
    - name: Azure Functions Action
      uses: Azure/functions-action@v1
      id: fasnodejs
      continue-on-error: false
      with:
        # Name of the Azure Function App
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        # Path to package or folder. *.zip or a folder to deploy
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        # Function app slot to be deploy to
        #slot-name: 'optonal'
        # Publish profile (*.publishsettings) file contents with web deploy secrets
        #publish-profile: ${{secrets.SCM_CREDENTIALS}}
